@import '../../../@theme/styles/themes';
@include nb-install-component() {
  .buttons-actions {
    padding-bottom: 0.5rem;
    float: left;
  }
  .select-pager {
    float: left;
    text-align: right;
    .select-options {
      text-align: right;
    }
  }
  button[nbButton] {
    margin: 0.2rem;
  }
  nb-card {
    transform: translate3d(0, 0, 0);
    margin-top: 1rem;
  }
  .simulation-card {
    width: 1500px;
    height: 700px;
  }
  /*   .table-container {
    overflow-x: auto;

  }     */
  nb-checkbox {
    margin-bottom: 1rem;
  }
  .form-inline [fullWidth] {
    flex: 1;
  }
  .form-inline > * {
    margin: 0 1.5rem 1.5rem 0;
  }
  nb-card.inline-form-card nb-card-body {
    padding-bottom: 0;
  }

  .labelform {
    color: #8f9bb3;
    font-size: 0.85rem;
    font-family: Open Sans, sans-serif;
    font-weight: 700;
    line-height: 1rem;
  }
  nb-tabset {
    font-size: 0.5rem !important;
  }
  .flex-parent-element {
    display: flex;
    width: 100%;
  }
  .flex-child-element {
    flex: 1;
    margin: 10px;
  }
  .flex-child-element:first-child {
    margin-right: 20px;
  }
  .download {
    text-align: right;
  }
  nb-card-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .export-container {
    text-align: right;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .error {
    font-size: 0.8rem;
    color: #e32c2c;
  }
  .export-to-csv-container {
    min-width: 6rem;
  }

  nb-tabset > ul {
    overflow-x: auto;
    overflow-y: hidden;
  }
  .button-calculate {
    min-width: 7rem;
  }
  .button-filter {
    margin-top: 1.3rem;
  }
  .balance-table {
    width: 100%;
  }
  ::ng-deep {
    
    .rgHeaderCell.sortable:has(.header-content):has(span.column-input) {
      background: #088e47;
      color: white;
    }
    .rgHeaderCell.sortable:has(.header-content):has(span.column-output) {
      background: #6d32ff;
      color: white;
    }
    .rgHeaderCell.sortable:has(.header-content):has(span.column-both) {
      background: #A7A7A7;
      color: white;
    }

    .rgHeaderCell.sortable:has(.header-content):has(span.column-input):hover {
      background: #36bb67 !important;
      color: white;
    }
    .rgHeaderCell.sortable:has(.header-content):has(span.column-output):hover {
      background: #9665ff !important;
      color: white;
    }
    .rgHeaderCell.sortable:has(.header-content):has(span.column-both):hover {
      background: #CACACA !important;
      color: white;
    }
  }
}
